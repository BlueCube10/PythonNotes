##  Creating the Charcters in the game.
from random import randint

class Actor:
    def __init__(self, name, level):
        self.name = name
        self.level = level

    def __repr__(self):
        return '<Actor: {}, Level:{}'.format(self.name, self.level)
    
    def get_attack_power(self):
        return randint(1, 100) * self.level

    def attacks(self, other):
        raise NotImplementedError() # will warn that this isnt implemented as this will be specific to the actor type.
    

class Player(Actor):
    
    def attacks(self, enemy):
        power = self.get_attack_power()
        enemy_power = enemy.get_attack_power()

        print('You summon {} power units!'.format(power))
        print('{} summons {} power units!'.format(enemy.kind, enemy_power))

        if power >= enemy_power:
            print('You slay the {}'.format(enemy.kind))
            return True
        else:
            print('You were defeated!')
            return False


class Enemy(Actor):
    def __init__(self, name, level, kind):
        super().__init__(name, level)
        self.kind = kind

    def __repr__(self):
        return '<Enemy: {}>'.format(self.kind)

class Ogre(Enemy):
    def __init__(self, name, level, size):
        super().__init__(name, level, 'Ogre')
        self.size = size

    def get_attack_power(self):
        return randint(1, 50) * (self.size * self.level)

class Imp(Enemy):
    def __init__(self, name, level):
        super().__init__(name, level, 'Imp')

    def get_attack_power(self):
        return super().get_attack_power() / 4
    
    
## if __name__ == '__main__': used to only run code if this file is run. Not if imported.
if __name__ == '__main__':
    player = Player(name='James',level=1)
    print(player)
    print(player.get_attack_power())
    # enemy = Enemy(kind='Ogre', level=1)
    # print(enemy)
    # print(enemy.level)

